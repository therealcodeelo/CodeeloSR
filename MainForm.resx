<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="codeeloPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="codeeloFormDrag1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="codeeloPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="codeeloFormDrag1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>